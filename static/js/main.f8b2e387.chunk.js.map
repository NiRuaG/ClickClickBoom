{"version":3,"sources":["reactLogo.svg","components/ClickCard.js","util/shuffle.js","components/Header.js","components/Main.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ClickCard","_ref","alt","src","display","doSpin","doDanger","onAnimationEnd","props","Object","objectWithoutProperties","className","react_default","a","createElement","assign","join","style","shuffle","array","i","length","j","Math","floor","random","Header","title","bestScore","curScore","maxScore","href","reactLogo","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","id","concat","Main","state","stateReset","numbers","toConsumableArray","Array","nameMap","keys","splice","clickedSet","Set","unclicked","this","shuffleTiles","guaranteedNotClicked","randomSpotInLineup","setState","keyNum","clickLocked","has","duplicate","selected","_this2","add","idx","findIndex","v","_this$state","animationName","NaN","updateSetAndScore","objectSpread","_this3","clickcards","map","num","name","components_ClickCard","key","String","padStart","onClick","handleClick","event","handleAnimEnd","_this$state2","headerProps","userSelect","MozUserSelect","components_Header","maxWidth","margin","flexFlow","justifyContent","pointerEvents","Component","App","components_Main","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f8b2e387.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactLogo.5d5d9eef.svg\";","import React from 'react';\n\nimport './clickcards.css'\n\n\nfunction ClickCard({ alt, src, display, doSpin, doDanger, onAnimationEnd,...props }) {\n  const className=[\n    \"clickCard\",\n    doSpin ? 'spin' : '',\n    doDanger ? 'danger' :''\n  ];\n  return (\n    <button\n\n      className={className.join(' ')}\n\n      style={{\n        display: display ? null: 'none'\n      }}\n\n      {...props}>\n\n      <img alt={alt} src={src} onAnimationEnd={onAnimationEnd}/>\n\n    </button>\n  );\n}\n\n\nexport default ClickCard;","export default array => {\n  //% https://stackoverflow.com/a/12646864\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n}","import React from 'react';\nimport reactLogo from './../reactLogo.svg';\n\n\nfunction Header({ title, bestScore, curScore, maxScore }) {\n  return (\n    <header className=\"App-header\">\n          \n    <a href=\"https://github.com/NiRuaG/ClickClickBoom\">\n    <img src={reactLogo} className=\"App-logo\" alt=\"React Logo\" />\n    <svg \n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fab\"\n      data-icon=\"github\"\n      className=\"svg-inline--fa fa-github fa-w-16\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\">\n      <path fill=\"currentColor\" d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path>\n    </svg>\n    </a>\n\n    <h3>{title}</h3>\n    <p>\n      Best Score: <span id=\"bestScore\">{bestScore}</span>\n    </p>\n    <p>\n      You clicked <span id=\"curScore\">{curScore}</span>{` of ${maxScore}`}\n    </p>\n  </header>\n  );\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nimport ClickCard from './ClickCard';\n\nimport nameMap from './../names';\nimport shuffle from './../util/shuffle';\n\n\nimport './main.css'\nimport Header from './Header';\n\n\nclass Main extends Component {\n  state = { ...Main.stateReset, //* primitives\n    bestScore: 0,\n    numbers: [...Array(nameMap.length).keys()].splice(1), //! '..splice(1)' because 0-index name mapping \n    clickedSet: new Set(),\n    unclicked: [...Array(nameMap.length).keys()].splice(1) //% to assure there will always be a new (not previously clicked) 'mon in the lineup \n  }\n\n  componentWillMount(){\n    this.shuffleTiles();\n  }\n\n  shuffleTiles() {\n    // start with the base array of [1,2,3,4,...]\n    const numbers = [...Array(nameMap.length).keys()].splice(1); //! '..splice(1)' because 0-index name mapping\n\n    if (!this.state.unclicked.length) { // player has gotten MAX score, just shuffle the base array\n      shuffle(numbers);\n    }\n    else { // guarantee that a tile in the lineup will have not been clicked already\n\n      // pick a random 'mon-number from those that have NOT been clicked\n      const guaranteedNotClicked = this.state.unclicked[\n        Math.floor(Math.random() * this.state.unclicked.length)\n      ];\n\n      // take that un-clicked number OUT of the general array\n      numbers.splice(guaranteedNotClicked - 1, 1); //! -1 because 0-index mapping\n\n      // shuffle the rest of array (that is less 1, without the un-clicked)\n      shuffle(numbers);\n\n      // find a random spot in the lineup (first 12 spots) to put the unclicked 'mon-number back in\n      const randomSpotInLineup = Math.floor(Math.random() * 12);\n\n      // insert the un-clicked 'mon-number back into numbers array (somewhere within the first 12 lineup)\n      numbers.splice(randomSpotInLineup, 0, guaranteedNotClicked);\n\n    }\n\n    this.setState({ numbers });\n  }\n\n  handleClick(keyNum) {\n    if (this.state.clickLocked) return;\n    this.setState({ clickLocked: true });\n\n    if (this.state.clickedSet.has(keyNum)) {\n      this.setState({ \n        duplicate: keyNum,\n        title: `You already clicked ${nameMap[keyNum]}`\n      })\n    }\n\n    else {\n      this.setState({\n        selected: keyNum,\n        title: `You clicked ${nameMap[keyNum]}`\n      });\n    }\n\n  }\n\n  \n  updateSetAndScore(keyNum) {\n    // Add this new keyNum to Set\n    const clickedSet = new Set(this.state.clickedSet);\n    clickedSet.add(keyNum);\n\n    // Remove this keyNum from array of unclicked\n    const unclicked = [...this.state.unclicked];\n    const idx = unclicked.findIndex(v => v===keyNum); //? could be a binary search instead (unclicked stays sorted)\n    unclicked.splice(idx, 1); \n\n    // Score updates\n    let { curScore, bestScore } = this.state;\n    if (++curScore > bestScore) {\n      bestScore = curScore;\n    }\n\n\n    this.setState({\n      curScore,\n      bestScore,\n      clickedSet,\n      unclicked\n    }, () => { this.shuffleTiles()}); // shuffleTiles function also affects unclicked array, so execute it in the callback after the setState here, to make sure unclicked array is in correct state\n  }\n\n\n  handleAnimEnd({ animationName }, keyNum) {\n    if (animationName === 'zoom') return;\n\n    this.setState({ clickLocked: false });\n\n\n    switch(animationName) {\n\n      case 'spin': // after spin animation, shuffle the board\n        this.setState({ selected: NaN });\n        this.updateSetAndScore(keyNum);\n        break;\n\n      case 'danger': // after danger animation, reset the game\n        this.setState({...Main.stateReset,\n          clickedSet: new Set(),\n          unclicked: [...Array(nameMap.length).keys()].splice(1)\n        });\n\n        this.shuffleTiles();\n        break;\n\n      default:;\n\n    }\n\n  }\n\n  render() {\n\n    const clickcards = this.state.numbers.map( (num, i) => {\n      const name = nameMap[num];\n      //% We have all the click cards \"render to DOM\" and just 'toggle' the display property in its styling as a prop\n      //% seems to help with not reloading images\n      return (\n        <ClickCard\n          key={num}\n\n          alt={name}\n          src={`img/${String(num).padStart(3,'0')} ${name}.png`}\n\n          display={i < 12} //! only show first 12\n          \n          onClick={() => this.handleClick(num)}\n\n          doDanger={this.state.duplicate === num}\n          doSpin={this.state.selected === num}\n          onAnimationEnd={(event) => this.handleAnimEnd(event, num)}\n        />\n      )\n    });\n\n\n    const { title, bestScore, curScore, maxScore, clickLocked } = this.state;\n    const headerProps = { title, bestScore, curScore, maxScore };\n\n    return (\n      <div style={{\n         userSelect: 'none',\n      MozUserSelect: 'none',\n      }}>\n      \n       <Header {...headerProps} />\n\n          <main style={{\n            maxWidth: '53rem',\n            margin: '0 auto',\n            display: 'flex',\n            flexFlow: 'row wrap',\n            justifyContent: 'space-around',\n            \n\n            pointerEvents: clickLocked && 'none'\n          }}>\n            {clickcards}\n          </main>\n\n      </div>\n    )\n\n  }\n\n}\n\n//* PRIMITIVE properties on reset\nMain.stateReset = {\n  maxScore: nameMap.length-1, //! '-1' because 0-index name mapping\n  clickLocked: false,\n  selected: NaN,\n  duplicate: NaN,\n  title: \"Gotta Click 'em All Just Once\",\n  curScore: 0,\n}\n\n\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Main from './components/Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}